/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from './third-share';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '../../node_modules/ionic-angular/components/content/content.ngfactory';
import * as import11 from 'ionic-angular/config/config';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from 'ionic-angular/components/app/app';
import * as import14 from 'ionic-angular/util/keyboard';
import * as import15 from '@angular/core/src/zone/ng_zone';
import * as import16 from 'ionic-angular/navigation/view-controller';
import * as import17 from 'ionic-angular/components/tabs/tabs';
import * as import18 from 'ionic-angular/components/content/content';
export class Wrapper_ThirdShare {
  context:import0.ThirdShare;
  changed:boolean;
  constructor() {
    this.changed = false;
    this.context = new import0.ThirdShare();
  }
  detectChangesInternal(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
var renderType_ThirdShare_Host:import2.RenderComponentType = (null as any);
class _View_ThirdShare_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _ThirdShare_0_4:Wrapper_ThirdShare;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_ThirdShare_Host0,renderType_ThirdShare_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = this.selectOrCreateHostElement('third-share',rootSelector,(null as any));
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_ThirdShare0(this.viewUtils,this.injector(0),this._appEl_0);
    this._ThirdShare_0_4 = new Wrapper_ThirdShare();
    this._appEl_0.initComponent(this._ThirdShare_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._ThirdShare_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ThirdShare) && (0 === requestNodeIndex))) { return this._ThirdShare_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ThirdShare_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_ThirdShare_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  if ((renderType_ThirdShare_Host === (null as any))) { (renderType_ThirdShare_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_ThirdShare_Host0(viewUtils,parentInjector,declarationEl);
}
export const ThirdShareNgFactory:import9.ComponentFactory<import0.ThirdShare> = new import9.ComponentFactory<import0.ThirdShare>('third-share',viewFactory_ThirdShare_Host0,import0.ThirdShare);
const styles_ThirdShare:any[] = ([] as any[]);
var renderType_ThirdShare:import2.RenderComponentType = (null as any);
class _View_ThirdShare0 extends import1.AppView<import0.ThirdShare> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _Content_0_4:import10.Wrapper_Content;
  _text_1:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_ThirdShare0,renderType_ThirdShare,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'ion-content',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','share-item');
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import10.viewFactory_Content0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Content_0_4 = new import10.Wrapper_Content(this.parentInjector.get(import11.Config),new import12.ElementRef(this._el_0),this.renderer,this.parentInjector.get(import13.App),this.parentInjector.get(import14.Keyboard),this.parentInjector.get(import15.NgZone),this.parentInjector.get(import16.ViewController,(null as any)),this.parentInjector.get(import17.Tabs,(null as any)));
    this._appEl_0.initComponent(this._Content_0_4.context,([] as any[]),compView_0);
    this._text_1 = this.renderer.createText((null as any),'\n    hello\n',(null as any));
    compView_0.create(this._Content_0_4.context,[
      ([] as any[]),
      ([] as any[]).concat([this._text_1]),
      ([] as any[])
    ]
    ,(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init(([] as any[]),[
      this._el_0,
      this._text_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.Content) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._Content_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._Content_0_4.detectChangesInternal(this,this._el_0,throwOnChange)) { this._appEl_0.componentView.markAsCheckOnce(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._Content_0_4.context._sbPadding;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementClass(this._el_0,'statusbar-padding',currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._Content_0_4.context.ngOnDestroy();
  }
}
export function viewFactory_ThirdShare0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<import0.ThirdShare> {
  if ((renderType_ThirdShare === (null as any))) { (renderType_ThirdShare = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,styles_ThirdShare,{})); }
  return new _View_ThirdShare0(viewUtils,parentInjector,declarationEl);
}