var slider = { 
    count : 0,
    //判断设备是否支持touch事件
    touch:('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch,
    eachfor:function(ele){
        for(var i=0,len = ele.length; i<len; i++){
            ele[i].style.width = this.eleWidth + 'px';  
            ele[i].style.marginRight = this.left + 'px';
        }               
    }
    ,
    //改变背景色以及 轮播元素的透明
    changeStatus:function(movePos){
            //手指滑动，带动li滚动的距离
            var absRnge =Math.round(movePos * this.ratio);   
            //屏幕里面li滑动的距离占据一个整的滑动距离的百分比
            var ratio = 1.5*(absRnge / (this.eleWidth + this.left));     
            
            //现在的UL的偏移量 
            var nowulLeft = this.slider.style.transform.match(/-?\d+/g)[0];  
            
            //及时的偏移量等于现在的偏移量+ 移动的距离
            this.slider.style.transform  = 'translateX('+ (parseInt(this.nowtranslaterX) + movePos) +'px)';
        this.sliderli[this.events.index].style.opacity = 1+ratio;  
        this.sliderli[this.events.index].style.transform = "translate3d("+ (-40-40*ratio) + "px,0,"+ (80*ratio)  +"px)"; 
    }
    ,
    //事件
    events:{
        index:0,     //显示元素的索引
        slider:this.slider,     //this为slider对象
        handleEvent:function(event){
            var self = this;     //this指events对象
            if(event.type == 'touchstart'){
                self.start(event);
            }else if(event.type == 'touchmove'){
                self.move(event);
            }else if(event.type == 'touchend'){
                self.end(event);
            }
        }, 
        //滑动开始
        start:function(event){   
            var touch = event.targetTouches[0];     //touches数组对象获得屏幕上所有的touch，取第一个touch
            //记录手指按下去的时候，ul的偏移量
            slider.nowtranslaterX = this.slider.style.transform.match(/-?\d+/g)[0];
            //取第一个touch的坐标值\n
            startPos = {x:touch.pageX,y:touch.pageY,time:+new Date};   
            //固定一个数值，因为每一次MOVE都会平凡触发，因此我们设置一个取值，只有距离大于某一个数值才进行MOVE后面的运算
            slider.timeoutCount = startPos.time;
                
            isScrolling = 0;   //这个参数判断是垂直滚动还是水平滚动
            this.slider.addEventListener('touchmove',this,false); 
            this.slider.addEventListener('touchend',this,false);  
        },
        //移动
        move:function(event){
                 
                 event.preventDefault();
                 alert(JSON.stringify(event));
                //当屏幕有多个touch或者页面被缩放过，就不执行move操作   
            if(event.targetTouches.length > 1 || event.scale && event.scale !== 1) return;   
            var touch = event.targetTouches[0];
            endPos = {x:touch.pageX - startPos.x,y:touch.pageY - startPos.y};
            isScrolling = Math.abs(endPos.x) < Math.abs(endPos.y) ? 1:0; 
        },
        //滑动释放
        end:function(event){  
       
            var duration = +new Date - startPos.time;     //滑动的持续时间
            if(isScrolling === 0){    //当为水平滚动时
//          slider.icon[this.index].className = 'off'; 
            if(Number(duration) > 10){     
                //判断是左移还是右移，当偏移量大于10时执行
                if(endPos.x > 10){
                        if(slider.count == 0) return;  
                    slider.sliderli[slider.count].classList.remove('on');  
                    slider.sliderli[slider.count].classList.add('offright');
                    slider.sliderli[slider.count-1].classList.remove('offleft');
                    slider.sliderli[slider.count-1].classList.add('on');
                    var thisTransLeft = document.getElementById('slider').style.transform.match(/-?\d+/g)[0]; 
                    var nn = parseInt(thisTransLeft) + slider.eleWidth + slider.left;  
                    slider.slider.style.transform = "translateX("+nn+"px)";
                    document.getElementById('icons').children[slider.count].classList.remove("curr"); 
                    document.getElementById('icons').children[slider.count-1].classList.add("curr"); 
                    slider.count--;
                    document.querySelectorAll('.transbg')[slider.count].style.opacity = '1'    ; 
                    slider.absText.style.backgroundImage = 'url(img/guide/btn-'+(slider.count)+'_03.png)';
                    
                    
                }else if(endPos.x < -10){
                        if(slider.count == slider.sliderli.length-1) return;   
                    slider.sliderli[slider.count].classList.remove('on'); 
                    slider.sliderli[slider.count].classList.add('offleft');
                    slider.sliderli[slider.count+1].classList.remove('offright');  
                    slider.sliderli[slider.count+1].classList.add('on');
                    var nn = slider.left - ((slider.count+1)*(slider.eleWidth + slider.left)); 
                    slider.slider.style.transform = "translateX("+nn+"px)";
                    document.querySelectorAll('.transbg')[slider.count].style.opacity = '0'; 
                    document.getElementById('icons').children[slider.count].classList.remove("curr"); 
                    document.getElementById('icons').children[slider.count+1].classList.add("curr"); 
                    slider.count++;
                    slider.absText.style.backgroundImage = 'url(img/guide/btn-'+(slider.count)+'_03.png)';
                }
            }
        }
//          //解绑事件
        this.slider.removeEventListener('touchmove',this,false);
        this.slider.removeEventListener('touchend',this,false);   
        }
    },
    
    //初始化
    init:function(parse1,parse2,parse3,parse4,parse5){
        var self = this;
        this.slider = parse1;
        this.absText= parse2;
        this.sliderli= parse3; 
        this.content= parse4;
        this.icons= parse5;
        //屏幕宽度
        this.fullWidth = document.body.clientWidth;
        //每一个正面展示轮播页占据整个屏幕的宽度是4/3 这是设计稿量出来的比值  
        this.eleWidth = Math.round(this.fullWidth * 0.75); 
        //移动的UL的期初距离屏幕左边的距离
        this.left = Math.round((this.fullWidth - this.eleWidth) /2 );
        //这个是比率，我们手指从屏幕左边滑到屏幕右边，是320的宽度，但是UL滚动一次的宽度则少于这个，因此需要有一个比值
        this.ratio = (this.fullWidth - this.left) / this.fullWidth; 
        this.absText.style.height = Math.floor(this.eleWidth * (320 / 549) )+ 'px'
        this.content.style.width = this.fullWidth + 'px';
        this.content.style.height = this.fullWidth + 'px';
        this.slider.style.transform = "translateX("+ this.left +"px)";
        this.eachfor(this.sliderli);
        if(!!self.touch) self.slider.addEventListener('touchstart',self.events,false);   
    }
};  
